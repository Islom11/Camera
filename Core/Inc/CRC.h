/*
 * CRC.h
 *
 *  Created on: 23 янв. 2014 г.
 *      Author: Dmitry F. Semenyuk
 *
 *      Содержит набор функций для вычисления CRC
 */

#ifndef CRC_H_
#define CRC_H_

#include <stdint.h>

//#ifdef __cplusplus
//extern "C"
//{
//#endif



//===========================================================================================
// Функции для вычисления CRC16 по алгоритму CCITT
// Начальное значение CRC должно быть 0хFFFF !!!

//вычисляет CRC очередного байта
extern uint16_t CRC16_update(uint16_t crc, uint8_t new_byte);

//вычисляет CRC отрезка байтов
extern uint16_t CRC16_calc(uint8_t *buf, uint16_t len);

//===========================================================================================
// Функции для вычисления CRC32

//вычисляет CRC отрезка байтов
extern uint32_t CRC32_calc(const unsigned char *buf, uint32_t len);

//===========================================================================================
// Функции для вычисления CRC16 по алгоритму CCITT в соответствии с Q.921 RFC1662 (стр.20)
#define INIT_CRC16_Q921	0xffff	//начальное значение CRC-16
#define GOOD_CRC16_Q921	0xf0b8	//финальное значение CRC-16 при суммировании пакета вместе с его корректной CRC-16
                                // (предварительно поразрядно проинвертированной и записанной в формате little-endian)

//вычисляет CRC очередного байта
uint16_t CRC16_Q921_update(uint16_t crc, uint8_t new_byte);

//вычисляет CRC отрезка байтов
uint16_t CRC16_Q921_calc(uint16_t crc, uint8_t *buf, uint16_t len);

//вычисляет CRC отрезка байтов и записывает ее в инверсном виде по адресам pcBlock[len] (младший байт) и pcBlock[len+1] (старший байт)
// !!! В буфере buf должно быть место для записи двух байтов CRC-16 в его конец !!!
uint16_t CRC16_Q921_add(uint8_t *buf, uint16_t len);

//проверяет CRC отрезка байтов и записывает ее в инверсном виде по адресам pcBlock[len] (младший байт) и pcBlock[len+1] (старший байт)

bool CRC16_Q921_check(uint8_t *buf, uint16_t len);

//===========================================================================================



//#ifdef __cplusplus
//}
//#endif

#endif /* CRC_H_ */
